"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fsIsFile = exports.fsIsDirectory = exports.fsReadDir = exports.fsDirExists = exports.fsRename = exports.fsAppendFile = exports.fsChmod = exports.fsCopyFile = exports.fsDeleteDirectory = exports.fsCreateDirectory = exports.fsDeleteFile = exports.fsWriteFile = exports.fsReadFile = exports.fsExistsSync = void 0;
function fsExistsSync(path) {
    return cy.task("fsFileExists", path, { log: false });
}
exports.fsExistsSync = fsExistsSync;
function fsReadFile(path, options) {
    return cy.task("fsReadFile", { path, options }, { log: false });
}
exports.fsReadFile = fsReadFile;
function fsWriteFile(path, content, options) {
    cy.task("fsWriteFile", { path, content, options }, { log: false });
}
exports.fsWriteFile = fsWriteFile;
function fsDeleteFile(path) {
    cy.task("fsDeleteFile", path, { log: false });
}
exports.fsDeleteFile = fsDeleteFile;
function fsCreateDirectory(path, fileOptions) {
    cy.task("fsCreateDirectory", { path, fileOptions }, { log: false });
}
exports.fsCreateDirectory = fsCreateDirectory;
function fsDeleteDirectory(path, fileOptions) {
    cy.task("fsDeleteDirectory", { path, fileOptions }, { log: false });
}
exports.fsDeleteDirectory = fsDeleteDirectory;
const fsCopyFile = ({ path, newPath, mode, }) => {
    cy.task("fsCopyFile", { path, newPath, mode }, { log: false });
};
exports.fsCopyFile = fsCopyFile;
const fsChmod = ({ path, mode }) => {
    cy.task("fsChmod", { path, mode }, { log: false });
};
exports.fsChmod = fsChmod;
const fsAppendFile = ({ path, content, }) => {
    cy.task("fsAppendFile", { path, content }, { log: false });
};
exports.fsAppendFile = fsAppendFile;
const fsRename = ({ path, newPath, }) => {
    cy.task("fsRename", { path, newPath }, { log: false });
};
exports.fsRename = fsRename;
const fsDirExists = (path) => {
    return cy.task("fsDirExists", path, { log: false });
};
exports.fsDirExists = fsDirExists;
const fsReadDir = (path, options) => {
    return cy.task("fsReadDir", { path, options }, { log: false });
};
exports.fsReadDir = fsReadDir;
const fsIsDirectory = (path) => {
    return cy.task("fsIsDirectory", path, { log: false });
};
exports.fsIsDirectory = fsIsDirectory;
const fsIsFile = (path) => {
    return cy.task("fsIsFile", path, { log: false });
};
exports.fsIsFile = fsIsFile;
