/// <reference types="node" />
/// <reference types="node" />
import fs from "fs";
import { CreateDirOptions, DeleteDirOptions, ReadFileOptions, ReadDirOptions } from "../types";
export declare const fileSystemMethods: {
    fsFileExists: (path: string) => true | null;
    fsReadFile({ path, options }: {
        path: string;
        options?: ReadFileOptions | undefined;
    }): Buffer;
    fsWriteFile({ path, content, options, }: {
        path: string;
        content: string;
        options?: fs.WriteFileOptions | undefined;
    }): null;
    fsDeleteFile: (path: string) => null;
    fsCreateDirectory: ({ path, fileOptions, }: {
        path: string;
        fileOptions?: CreateDirOptions | undefined;
    }) => null;
    fsDeleteDirectory: ({ path, fileOptions, }: {
        path: string;
        fileOptions?: fs.RmDirOptions | undefined;
    }) => null;
    fsCopyFile: ({ path, newPath, mode, }: {
        path: string;
        newPath: string;
        mode?: number | undefined;
    }) => null;
    fsChmod({ path, mode }: {
        path: string;
        mode: number;
    }): null;
    fsAppendFile({ path, content, options, }: {
        path: string;
        content: string;
        options?: fs.WriteFileOptions | undefined;
    }): null;
    fsRename({ path, newPath }: {
        path: string;
        newPath: string;
    }): null;
    fsDirExists(path: string): true | null;
    fsReadDir({ path, options }: {
        path: string;
        options?: ReadDirOptions | undefined;
    }): string[];
    fsIsDirectory(path: string): true | null;
    fsIsFile(path: string): true | null;
};
